@model CloudtrixApp.Core.DataModel.ProjectModel
@{
    ViewBag.Title = "AddProject";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker3.css" rel="stylesheet" />
<link href="~/Content/adminFront/assets/plugins/timepicker/bootstrap-datepicker.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
@section scripts {
    <script src="~/Content/adminFront/assets/plugins/timepicker/bootstrap-datepicker.js"></script>
    @Scripts.Render("~/bundles/App3")
    <script type="text/javascript">

        $('#EmployeeIds_List').multiselect({
            includeSelectAllOption: true,
            maxHeight: '300',
            buttonWidth: '254.5',
        });

        $('#StartDate').change(function () {
            var sTime = $('#StartDate').val();
            var eTime = $('#EndDate').val();
            if (eTime != "") {
                var aDate = new Date(Date.parse(sTime));
                var bDate = new Date(Date.parse(eTime));

                if (aDate > bDate) {
                    alert("Start Date must be smaller than End Date")
                    $('#StartDate').val('');
                    return false;
                }

            }
        });
        $('#EndDate').change(function () {
            var sTime = $('#StartDate').val();
            var eTime = $('#EndDate').val();
            if (sTime != "") {
                var aDate = new Date(Date.parse(sTime));
                var bDate = new Date(Date.parse(eTime));

                if (aDate > bDate) {
                    alert("End Date must be Greater than Start Date")
                    $('#EndDate').val('');
                    return false;
                }

            } else {
                alert("Please Select Start Date")
                return false;
            }
        });


    </script>
}





<div class="wraper container-fluid">
    <div class="page-title">
        <h3 class="title">Project </h3>
    </div>
    <div class="row">
        <div class="col-lg-10 col-md-offset-1">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">New Project</h3>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("AddProject", "Admin", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @Html.LabelFor(x => x.ProjectName)
                            @Html.TextBoxFor(x => x.ProjectName, null, new { @class = "form-control", @placeholder = "Enter Project Name " })
                            @Html.ValidationMessageFor(x => x.ProjectName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.BillingName)
                            @Html.TextBoxFor(x => x.BillingName, null, new { @class = "form-control", @placeholder = "Enter Billing Name " })
                            @Html.ValidationMessageFor(x => x.BillingName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.ArchitectId)
                            @Html.DropDownListFor(x => x.ArchitectId,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.architect, "Value", "Text"), "Select Project Head",
                                    htmlAttributes: new { @class = "", id = "Architect" })
                            @Html.ValidationMessageFor(x => x.ArchitectId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.CustomerId)
                            @Html.DropDownListFor(x => x.CustomerId,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.customer, "Value", "Text"), "Select C",
                                    htmlAttributes: new { @class = "", id = "Customer1" })
                            @Html.ValidationMessageFor(x => x.CustomerId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.EmployeeIds)
                            @*@Html.DropDownListFor(x => x.EmployeeIds,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.employee, "Value", "Text"), "Select Employee ",
                                    htmlAttributes: new { @class = "", id = "EmployeeIds", @multiple = "multiple"})*@

                            @Html.DropDownListFor(model => model.EmployeeIds_List, new SelectList(ViewBag.employee, "Value", "Text"), new { @class = "form-control", @multiple = "multiple", @id = "EmployeeIds_List" })
                            @Html.ValidationMessageFor(x => x.EmployeeIds, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.Location)
                            @Html.TextBoxFor(x => x.Location, null, new { @class = "form-control", @rows = "5", @placeholder = "Notes" })
                            @Html.ValidationMessageFor(x => x.Location, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.Description)
                            @Html.TextBoxFor(x => x.Description, null, new { @class = "form-control", @rows = "5", @placeholder = "Notes" })
                            @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-inline">
                            <div class="form-group ">
                                <label for="Date">Start Date :</label>
                                @Html.TextBox("StartDate", null, new { @class = "form-control datepicker ", @placeholder = "Select Start Date ", autocomplete = "off" })
                            </div>
                            <div class="form-group">
                                <label for="Date">          End Date : </label>
                                @Html.TextBox("EndDate", null, new { @class = "form-control datepicker", @placeholder = "Select End Date ", autocomplete = "off" })
                            </div>
                        </div>

                            <br />
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">
                                    Submit
                                </button>
                                @Html.ActionLink("Back", null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-default" })
                            </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>
